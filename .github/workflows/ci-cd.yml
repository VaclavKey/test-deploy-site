name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest

      - name: Build and push Nginx Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./nginx
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx:latest

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        working-directory: ./backend
        run: pip install -r requirements.txt

      - name: Run tests
        working-directory: ./backend
        run: |
          echo "No tests configured yet."
          # Здесь можно запускать python -m unittest или pytest

  deploy:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - name: SSH to server and deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT || '22' }}
          script: |
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ github.sha }}
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ github.sha }}
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nginx:${{ github.sha }}
            docker-compose down
            docker-compose up -d
